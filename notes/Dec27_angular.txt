REST API
	REpresentational State Transfer

JSON server

	JavaScript Object Notation

[{key:value, key2:value2, key3:value3},
{key:value, key2:value2, key3:value3},
{key:value, key2:value2, key3:value3}]



1) install json server
	
	npm i json-server -g

2) create a folder for json server in your computer
	D:\Jag\Capgemini\Dec1stBatch\json_server

3) open notepad
	save the file as "db.json" in D:\Jag\Capgemini\Dec1stBatch\json_server

4) inside the file, type some json strings as an array
	{
	"product":[
		{"id":"1","name":"pencil","price":"7"},
		{"id":"2","name":"pen","price":"17"}
		],
	"customer":[
		 {"id":"1","firstName":"Raja","lastName":"Siva Kumar"}
		]
}

5) go to cmd prompt/ node.js command prompt,
	navigate to the folder that contains db.json

6) run this command:
	json-server --watch db.json

---------------Angular steps-----------
1) ng g s product
2) app.module.ts
	import
		HttpClientModule		from '@angular/common/http'
3) in product.service.ts
	in constructor, inject http client

	import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class ProductService {
  URL="http://localhost:3000/product";
  constructor(private http:HttpClient) { }

  getAllProducts()
  {
    return this.http.get(this.URL);
  }

  findProductById(id:number)
  {
    return this.http.get(this.URL+"/"+id);
  }

  addProduct(product:any)
  {
    return this.http.post(this.URL,product);
  }

  updateProduct(product:any)
  {
    return this.http.put(this.URL,product);
  }

  deleteProduct(id:number)
  {
    return this.http.delete(this.URL+"/id");
  }
}

4) create a component
	ng g c product

5) plug the component  in app component

6) create a  reactive form
	i) in app.module.ts
		import 	ReactiveFormsModule

7) 