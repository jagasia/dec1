Reactive Forms Module
---------------------------------
	We used FormsModule	for 2 way binding	ngIf, ngSwitch, ngForm, ngModel

When we use forms module, we are following "Template Driven Forms"


@Component({
	selector:
	template
	templateUrl
})


template = html

Reactive Forms
---------------------
	we create an object representation of the form

Employee
	id
	firstName
	lastName
	salary

an object of Employee
	{"id":"1","firstName":"Raja","lastName":"Sivakumar","salary":"123456"}

	this is JSON string representation of an object of Employee

	JSON.stringify(obj);		returns JSON string
	similarly to convert a JSON string into object
	JSON.parse(str);		returns object


Product
	id
	name
	price
	

Steps for reactive forms:
---------------------------------
1) add reactive forms module in the app.module.ts
	import { ReactiveFormsModule } from '@angular/forms';

	  imports: [
    BrowserModule,
    AppRoutingModule,
    ReactiveFormsModule
  ],


2) go to index.html
	in head section
		add the bootstrap cdn

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.1/dist/jquery.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>

3) go to app.component.html
	remove everything

4) in app.component.html	
	<div class="jumbotron text-center">
  <h1>My First Bootstrap Page</h1>
  <p>Resize this responsive page to see the effect!</p> 
</div>
  
<div class="container">
  <div class="row">
    <div class="col-sm-4">
      <h3>Column 1</h3>
      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit...</p>
      <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris...</p>
    </div>
    <div class="col-sm-4">
      <h3>Column 2</h3>
      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit...</p>
      <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris...</p>
    </div>
    <div class="col-sm-4">
      <h3>Column 3</h3>        
      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit...</p>
      <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris...</p>
    </div>
  </div>
</div>

5) create a component "product"
	ng g c product

6) go to product.component.ts
	i) declare an object "productForm"	of type any
	ii) in constructor, do a dependency injection 
		form builder
		import { FormBuilder } from '@angular/forms';
				
		constructor(private fb:FormBuilder) { }

7) using form builder, create an object representation of form

	  constructor(private fb:FormBuilder) { 
	    this.productForm=this.fb.group({
	      id:[],
	      name:[],
	      price:[]
    });


8) go to html code
	product.component.html

<form [formGroup]="productForm">
    Id: <input type="number" formControlName="id" class="form-control">
    Name: <input type="text" formControlName="name" class="form-control">
    Price: <input type="number" formControlName="price" class="form-control">
    <br>
    <input type="button" value="Add" class="btn btn-success">&nbsp;
    <input type="reset" value="Reset" class="btn btn-warning">
</form>
<br>
{{ productForm.value | json }}




app.module.ts		DO NOT KEEP THIS OPEN



x=020;		//octal
x=

keywords:
------------------
static
final
transient		non persistent
volatile		thread safe variable			cache
default		java 8 interfaces can contain		default methods



static:
------------
	data member
	method
	block

static data member
	public class Employee
	{
		static final String companyName="Capgemini";
	}

	a static member of a class does not belong to any particular instance (object) of the class
	if i create 5 objects of Employee, all objects share the same companyName variable. Each object do not have separate copy of the variable.

	
final
	whenever a final data member is declared in a class, it is good to declare it as "static" also

class MyException extends Exception
{
	public MyException(String message)
	{
		super(message);
	}
}

List<Employee> empList=new ArrayList<>();
empList.add(new Employee(1, "Ram","ECE",123456.0);
empList.add(new Employee(1, "Ram","EEE",123456.0);
empList.add(new Employee(1, "Ram","ECE",123456.0);
empList.add(new Employee(1, "Ram","CSE",123456.0);
empList.add(new Employee(1, "Ram","ECE",123456.0);
empList.add(new Employee(1, "Ram","EEE",123456.0);
empList.add(new Employee(1, "Ram","Civil",123456.0);
empList.add(new Employee(1, "Ram","ECE",123456.0);
empList.add(new Employee(1, "Ram","EEE",123456.0);


DEPARTMENT wise AVERAGE SALARY

HashMap<String,Double> result=new HashMap<String,Double>();

stream api

empList.stream()



ece
get(dept)

---------------------------------
Reactive Forms Validations
------------------------------------
id
	only 4 digits
	required
	only number
	
price
	> 0 

------------------------------------------
How angular frontend can access rest api backend?



https://api.instantwebtools.net/v1/airlines
	GET			SELECT	
	POST			INSERT
	PUT			UPDATE
	DELETE			DELETE
	PATCH			UPDATE not all the fields




GET
	all the records
GET	/id
	only zero or one row



Angular supports accessing REST api using 
	HttpClientModule

1) go to app.module.ts
	import { HttpClientModule } from '@angular/common/http';

2) create a service that access the  rest api
	ng g s airline

3) in airline.service.ts
	import { HttpClient } from '@angular/common/http';

	constructor(private http:HttpClient) { }

